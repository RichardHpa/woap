{"version":3,"sources":["woap19-logo.svg","Info/Info.js","Map/Map.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Info","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loaded","imgLoaded","closeInfo","bind","assertThisInitialized","handleImageLoad","prevProps","currentEvent","setState","_this$props","currentView","styles","backgroundImage","react_default","a","createElement","className","concat","style","src","onLoad","closeEvent","onClick","index_es","icon","faArrowLeft","size","renderMoreInfo","Component","require","MapContainer","_Component","displayMarkers","activeMarker","markers","map","marker","index","currentType","id","dist","key","url","position","lat","lng","onMarkerClick","zoom","mapLocation","onMapClicked","mapReady","inherits","createClass","value","currentMarkers","nextProps","nextState","e","markerID","i","length","selectedMarker","mapClick","_this$state","google","initialCenter","center","minZoom","onReady","GoogleApiWrapper","apiKey","process","App","appLoaded","eventsLoaded","navVisibile","navOpen","allEvents","handleMapReady","toggleNav","handleSelectMarker","handleMapClick","_this2","axios","get","then","response","allLocations","data","venues","Event","push","events","burger","dine","cocktail","iterationNum","j","venue","x","latLng","Venue","ll","split","singleEvent","singleEventToPush","venueDetails","eventDetails","parseFloat","eventID","parseInt","event_type_id","console","log","type","prevState","logo","alt","changeView","faFlag","faUtensils","faHamburger","faCocktail","src_Info_Info","Map_Map","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3b7645f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/woap19-logo.3c90ae3e.svg\";","import React, { Component } from 'react';\nimport './Info.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\n\nclass Info extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            loaded: false,\n            imgLoaded: false\n        }\n        this.closeInfo = this.closeInfo.bind(this);\n        this.handleImageLoad = this.handleImageLoad.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.currentEvent !== prevProps.currentEvent) {\n            this.setState({\n                imgLoaded: false,\n                loaded: true,\n            })\n            if(this.props.currentEvent === null ){\n                this.setState({\n                    loaded: false,\n                    imgLoaded: false\n                })\n            }\n        }\n\n\n    }\n\n    handleImageLoad(){\n        this.setState({\n            imgLoaded: true\n        })\n    }\n\n    renderMoreInfo(){\n        const {currentEvent, currentView} = this.props;\n        const {imgLoaded} = this.state;\n        let styles = {\n            'backgroundImage': 'url('+currentEvent['eventDetails']['image']+')'\n        }\n        if(currentView === 'burger'){\n            return(\n                <div className='eventDetails'>\n                    <h2>{currentEvent['eventDetails']['name_of_burger']} - ${currentEvent['eventDetails']['burger_price']}</h2>\n                    <h3>{currentEvent['venueDetails']['title']}</h3>\n                    {currentEvent['eventDetails']['image']?\n                        <div className={`mainImage ${imgLoaded ? 'imageLoaded':''}`} style={styles}>\n                        {\n                            imgLoaded ? '': <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n                        }\n                            <img\n                                src={currentEvent['eventDetails']['image']}\n                                className=\"imgSrc\"\n                                onLoad={this.handleImageLoad}\n                            />\n                        </div>\n                    :\n                        ''\n                    }\n                    <p>{currentEvent['eventDetails']['burger_description']}</p>\n                    <p>{currentEvent['venueDetails']['address1']}, {currentEvent['venueDetails']['address2']}</p>\n                </div>\n            )\n        } else if(currentView === 'dine'){\n            return(\n                <div className='eventDetails'>\n                    <h2>{currentEvent['venueDetails']['title']}</h2>\n                    {currentEvent['eventDetails']['image']?\n                        <div className={`mainImage ${imgLoaded ? 'imageLoaded':''}`} style={styles}>\n                        {\n                            imgLoaded ? '': <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n                        }\n                            <img\n                                src={currentEvent['eventDetails']['image']}\n                                className=\"imgSrc\"\n                                onLoad={this.handleImageLoad}\n                            />\n                        </div>\n                    :\n                        ''\n                    }\n                    <p>{currentEvent['eventDetails']['festival_dish_description']}</p>\n                    <p>{currentEvent['venueDetails']['address1']}, {currentEvent['venueDetails']['address2']}</p>\n                </div>\n            )\n        } else if(currentView === 'events'){\n            return(\n                <div className='eventDetails'>\n                    <h2>{currentEvent['eventDetails']['title']}</h2>\n                    <h3>{currentEvent['venueDetails']['title']}</h3>\n                    {currentEvent['eventDetails']['image']?\n                        <div className={`mainImage ${imgLoaded ? 'imageLoaded':''}`} style={styles}>\n                        {\n                            imgLoaded ? '': <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n                        }\n                            <img\n                                src={currentEvent['eventDetails']['image']}\n                                className=\"imgSrc\"\n                                onLoad={this.handleImageLoad}\n                            />\n                        </div>\n                    :\n                        ''\n                    }\n                    <p>{currentEvent['eventDetails']['short_description']}</p>\n                    <p>{currentEvent['venueDetails']['address1']}, {currentEvent['venueDetails']['address2']}</p>\n                </div>\n            )\n        } else if(currentView === 'cocktail'){\n            return(\n                <div className='eventDetails'>\n                    <h2>{currentEvent['eventDetails']['title']} - ${currentEvent['eventDetails']['price_of_cocktail_tapas_match']}</h2>\n                    <h3>{currentEvent['venueDetails']['title']}</h3>\n                    {currentEvent['eventDetails']['image']?\n                        <div className={`mainImage ${imgLoaded ? 'imageLoaded':''}`} style={styles}>\n                        {\n                            imgLoaded ? '': <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n                        }\n                            <img\n                                src={currentEvent['eventDetails']['image']}\n                                className=\"imgSrc\"\n                                onLoad={this.handleImageLoad}\n                            />\n                        </div>\n                    :\n                        ''\n                    }\n                    <p>{currentEvent['eventDetails']['description_of_cocktail_and_regionally_inspired_tapas_match']}</p>\n                    <p>{currentEvent['venueDetails']['address1']}, {currentEvent['venueDetails']['address2']}</p>\n                </div>\n            )\n        }\n\n    }\n\n    closeInfo(){\n        this.setState({\n            loaded: false,\n            imgLoaded: false\n        })\n        this.props.closeEvent();\n    }\n\n    render(){\n        const {currentEvent} = this.props;\n        const {loaded} = this.state;\n        return(\n            <div\n                className={`infoSidebar ${loaded? 'InfoOpen': ''}`}\n\n            >\n                <div\n                    className=\"backArrow\"\n                    onClick={this.closeInfo}\n                ><FontAwesomeIcon icon={faArrowLeft} size=\"2x\"/></div>\n\n                { currentEvent? this.renderMoreInfo() : '' }\n\n            </div>\n        )\n    }\n}\n\n\nexport default Info;\n\n                // { currentEvent? this.renderMoreInfo() : '' }\n","import React, { Component } from 'react';\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport './Map.scss';\nconst API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconst styles = require('./GoogleMapStyles.json')\n\n\nexport class MapContainer extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            zoom: 12,\n            mapLocation:{\n                lat: -41.2865,\n                lng: 174.7762\n            },\n            markers: [],\n            currentType: '',\n            activeMarker: null\n        }\n\n        this.onMarkerClick = this.onMarkerClick.bind(this);\n        this.onMapClicked = this.onMapClicked.bind(this);\n        this.mapReady = this.mapReady.bind(this);\n    }\n\n    componentDidMount () {\n        this.setState({\n            markers: this.props.currentMarkers,\n            currentType: this.props.currentView\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.currentView !== prevProps.currentView) {\n            this.setState({\n                markers: this.props.currentMarkers,\n                currentType: this.props.currentView,\n                activeMarker: null\n            })\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if((this.state.zoom !== nextState.zoom) || (this.state.mapLocation !== nextState.mapLocation)){\n            return true;\n        }\n        return (this.state.currentType !== nextProps.currentView);\n    }\n\n    onMarkerClick(props, marker, e){\n        const { markers } = this.state;\n        // marker.icon['url'] = '/markers/selectedMarker.png'\n        // console.log(marker);\n        var markerID = props.id;\n        for (var i = 0; i < markers.length; i++) {\n            if(markers[i].id === markerID){\n                this.props.selectedMarker(markers[i]);\n                this.setState({\n                    zoom: 15,\n                    mapLocation: marker.position,\n                    activeMarker: marker\n                });\n                break;\n            }\n        }\n    }\n\n    onMapClicked(){\n        this.props.mapClick();\n    }\n\n    displayMarkers = () => {\n        const { activeMarker } = this.state;\n        const { currentEvent } = this.props;\n\n        return this.state.markers.map((marker, index) => {\n            let icon = '/markers/'+this.state.currentType+'Marker.png';\n            if(activeMarker && (activeMarker.id === marker.id)){\n                icon = '/markers/selectedMarker.png';\n            }\n            return <Marker\n                key={index}\n                id={marker.id}\n                icon={{ url: icon}}\n                position={{\n                lat: marker.lat,\n                lng: marker.lng\n                }}\n                onClick={this.onMarkerClick}\n            />\n        })\n    }\n\n    mapReady(){\n        this.props.mapReady();\n    }\n\n    render() {\n        const {zoom, mapLocation} = this.state;\n      return (\n          <Map\n            google={this.props.google}\n            initialCenter={mapLocation}\n            center={mapLocation}\n            zoom={zoom}\n            minZoom={10}\n            styles={styles}\n            onClick={this.onMapClicked}\n            onReady={this.mapReady}\n          >\n            {this.displayMarkers()}\n          </Map>\n      );\n    }\n  }\n\n\nexport default GoogleApiWrapper({\n  apiKey: (API_KEY)\n})(MapContainer)\n\n\n\n\n\n\n\n// <div className=\"container\">\n// {\n//       this.state.locations.map(location => {\n//           return(\n//               <div\n//               key={location.Venue.id}\n//                className=\"locationCard\">\n//                   <div className=\"card\">\n//                       <img className=\"img-top\" src={location.Venue.image} alt=\"image\"/>\n//                       <div className=\"card-body\">\n//                           <h5>{location.Venue.title}</h5>\n//                       </div>\n//                   </div>\n//               </div>\n//           )\n//\n//       })\n//   }\n// </div>\n","import React, { Component } from 'react';\nimport logo from '../woap19-logo.svg';\nimport './App.scss';\nimport axios from 'axios'\nimport Info from '../Info/Info';\nimport MapContainer from '../Map/Map';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHamburger, faFlag, faUtensils, faCocktail } from '@fortawesome/free-solid-svg-icons';\n\nclass App extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            appLoaded: false,\n            eventsLoaded: false,\n            navVisibile: false,\n            navOpen: false,\n            allEvents: [],\n            currentView: 'burger',\n            currentEvent: null\n        }\n\n        this.handleMapReady = this.handleMapReady.bind(this);\n        this.toggleNav = this.toggleNav.bind(this);\n        this.handleSelectMarker = this.handleSelectMarker.bind(this);\n        this.handleMapClick = this.handleMapClick.bind(this);\n    }\n\n    componentDidMount () {\n        axios.get('https://visawoap.com/api/venues/page:1/limit:1000/.json?key=4e44f1ac85cd60e3caa56bfd4afb675e')\n        .then(response => {\n            const allLocations = [];\n            for (var i = 0; i < response.data.venues.length; i++) {\n                if(response.data.venues[i].Event.length > 0){\n                    allLocations.push(response.data.venues[i]);\n                }\n            }\n            const allEvents = {\n                events: [],\n                burger: [],\n                dine: [],\n                cocktail: []\n            };\n            var iterationNum = 1\n            for (var j = 0; j < allLocations.length; j++) {\n                var venue = allLocations[j];\n                for (var x = 0; x < venue.Event.length; x++) {\n                    var latLng = venue.Venue.ll.split(\",\");\n                    var singleEvent = venue.Event[x];\n                    let singleEventToPush = {\n                        id: iterationNum,\n                        venueDetails: venue.Venue,\n                        eventDetails: singleEvent,\n                        lat: parseFloat(latLng[0]),\n                        lng: parseFloat(latLng[1])\n                    }\n                    let eventID = parseInt(singleEventToPush.eventDetails.event_type_id);\n                    if(eventID === 29){\n                        //event\n                        allEvents['events'].push(singleEventToPush);\n                    } else if(eventID === 30){\n                        //burger\n                        allEvents['burger'].push(singleEventToPush);\n                    } else if(eventID === 31){\n                        //dine\n                        allEvents['dine'].push(singleEventToPush);\n                    } else if(eventID === 32){\n                        //cocktail\n                        allEvents['cocktail'].push(singleEventToPush);\n                    }\n                    iterationNum++;\n                }\n            }\n            this.setState({\n                allEvents: allEvents,\n                eventsLoaded: true\n            });\n        })\n        //This needs to be called from another function when the Map is ready\n        // var self = this;\n        // setTimeout(function(){\n        //     self.setState({\n        //         appLoaded: true,\n        //     });\n        //     setTimeout(function(){\n        //         self.setState(prevState => ({\n        //           navVisibile: !prevState.navVisibile\n        //         }));\n        //     }, 1200)\n        // }, 3000)\n    }\n\n    handleMapReady(){\n        console.log('ready');\n        this.setState({\n            appLoaded: true,\n            navVisibile: true,\n        })\n    }\n\n    changeView(type){\n        this.setState({\n            currentView: type,\n            currentEvent: null\n        })\n    }\n\n    toggleNav(){\n        this.setState(prevState => ({\n          navOpen: !prevState.navOpen\n        }));\n    }\n\n    handleSelectMarker(marker){\n        this.setState({\n            currentEvent: marker\n        });\n    }\n\n    handleMapClick(){\n        this.setState({\n            currentEvent: null\n        });\n    }\n\n    render(){\n        const { appLoaded, navOpen , navVisibile, allEvents, currentView, currentEvent, eventsLoaded} = this.state;\n        return(\n            <div className=\"App\">\n                <header className={`App-header ${appLoaded? '': 'App-Loading'}`}>\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n                <div className={`hamburgerContainer ${navVisibile? '': 'hidden'}`}>\n                    <div\n                        id=\"nav-icon3\"\n                        onClick={this.toggleNav}\n                        className={navOpen? 'open': ''}\n                    >\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </div>\n                <div className={`sidebar ${navOpen? 'sidebar-open': ''}`}>\n\n                    <div className=\"filters\">\n                        <div className=\"festivalCatsContainer\">\n                            <div className={`festivalCats events ${currentView === 'events'? 'active': ''}`} onClick={this.changeView.bind(this,'events')}><FontAwesomeIcon icon={faFlag}/> Events</div>\n                            <div className={`festivalCats dine ${currentView === 'dine'? 'active': ''}`} onClick={this.changeView.bind(this,'dine')}><FontAwesomeIcon icon={faUtensils}/> Dine</div>\n                            <div className={`festivalCats burger ${currentView === 'burger'? 'active': ''}`} onClick={this.changeView.bind(this,'burger')}> <FontAwesomeIcon icon={faHamburger}/> Burger</div>\n                            <div className={`festivalCats cocktail ${currentView === 'cocktail'? 'active': ''}`} onClick={this.changeView.bind(this,'cocktail')}><FontAwesomeIcon icon={faCocktail}/> Cocktails</div>\n                        </div>\n                    </div>\n                    <Info\n                        currentEvent={currentEvent}\n                        currentView={currentView}\n                        closeEvent={this.handleMapClick}\n                    />\n                </div>\n                <div id=\"Map\">\n                {\n                    eventsLoaded? <MapContainer\n                        currentView={this.state.currentView}\n                        currentMarkers={allEvents[currentView]}\n                        selectedMarker={this.handleSelectMarker}\n                        mapClick={this.handleMapClick}\n                        mapReady={this.handleMapReady}\n                    />: ''\n                }\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}